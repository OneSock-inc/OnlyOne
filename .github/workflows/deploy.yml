on:
  push:
    branches:
    - feature_deploy_backend

name: Deploy backend to GCR
env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT }}
  RUN_REGION: us-central1  
  SERVICE: onlyOne-backend

jobs:
  deploy:
    runs-on: ubuntu-latest

    # Add "id-token" with the intended permissions.
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: echo GCP_PROJECT
      run: echo ${{ secrets.GCP_PROJECT }}
    - name:
      run: echo ${{ secrets.ACTION_SERVICE_ACCT }}
    - name: auth google
      id: 'auth'
      uses: 'google-github-actions/auth@v0'
      with:
        credentials_json: '${{ secrets.ACTION_SERVICE_ACCT }}'

    # # Configure Workload Identity Federation and generate an access token.
    # - id: 'auth'
    #   name: 'authentication via credentials json'
    #   uses: 'google-github-actions/auth@v0'
    #   with:
    #     credentials_json: '${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}'

    # Alternative option - authentication via credentials json
    # - id: 'auth'
    #   uses: 'google-github-actions/auth@v0'
    #   with:
    #     credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

    # Setup gcloud CLI
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v0

    - name: Authorize Docker push
      run: gcloud auth configure-docker

    - name: Build and Push Container
      run: |-
        cd backend
        docker build -t gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{  github.sha }} .
        docker push gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{  github.sha }}
    - name: Deploy to Cloud Run
      run: |-
        gcloud run deploy ${{ env.SERVICE }} \
          --region ${{ env.REGION }} \
          --image gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{  github.sha }} \
          --platform "managed" \
          --quiet